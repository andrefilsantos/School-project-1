<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSair.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        t96GKOpvSGW8rYSBIRcAAAAASUVORK5CYII=
</value>
  </data>
</root>